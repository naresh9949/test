{"version":3,"sources":["components/SharedComponents/FileButtons/ExportBtn.js","components/ItemCycleCount/CycleCountMaintenance.js","components/SharedComponents/FileButtons/ImportBtn.js","components/ItemCycleCount/CycleCountAssignment.js","components/ItemCycleCount/CycleCount.js"],"names":["ExportButton","props","useState","open","snakbar","setSnakbar","reportId","Error","exporturl","setExportURL","loading","setLoading","theme","useTheme","handleSubmit","event","a","GetExcel","response","data","date","Date","document","createElement","href","download","toLocaleString","click","message","severity","time","console","log","snak","useEffect","keys","Object","values","process","i","length","Fragment","close","fullWidth","variant","onClick","component","size","sx","color","palette","secondary","main","position","top","left","marginTop","marginLeft","Replay","id","FacilityCode","userFacility","React","facilityCodenotmatches","setFacilityCodenotMatches","IconButton","disabled","Freeze","freeze","ID","checked","setchecked","Switch","onChange","target","entryUpdated","AssignedUsers","assignedUsersList","ItemKey","inventorycyclecountsequenceId","locationId","assignedUser","InventoryIdentifier","countstatus","value","setValue","inputValue","setInputValue","setAssigneduserName","usersList","removedUserList","setRemovedUserList","Get","res","CountStatusId","obj","find","o","key","CountedBy","filter","item","handlesetRemovedUserList","handleAssignedUsers","newValue","Autocomplete","disablePortal","onInputChange","newInputValue","options","getOptionLabel","option","width","marginRight","renderInput","params","TextField","CycleCountMaintenance","countStatus","row","setRow","facilityCode","idArray","sethide","handlePullDown","setHandlePullDown","handleFreeze","setHandleFreeze","setAssignedUser","countStatusValue","setCountStatusValue","items","setItems","itemValue","setItemValue","socketHandler","type","connectionObject","webSocketHandler","getDescription","CycleCountStatusId","CycleCountStatusDescription","handleApply","pulldown","result","StyledTableRow","withStyles","root","backgroundColor","TableRow","StyledTableCell","padding","TableCell","handlecheck","style","display","flexDirection","border","Grid","container","spacing","paddingLeft","sm","xs","paddingRight","pop","push","paddingTop","height","label","_event","fontSize","fontWeight","md","Button","borderLeft","Paper","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","map","column","TableBody","hidden","Typography","CurrentLocation","AssignedLocation","FullLayers","CaseTrayPerLayer","ExtraCaseTrays","QuantityPerCaseOrTray","ExtraQuantity","TotalQuantity","InventoryCycleCountSequenceId","IsPullDownCreated","InventoryCycleCountId","FreezeInventoryType","Id","Input","styled","cursor","ImportButton","selectedFile","setSelectedFile","importurl","setImportURL","reader","FileReader","readAsDataURL","onload","PostExcel","onerror","error","Notification","Stack","direction","htmlFor","accept","files","CircularProgress","list","Sel","removed","indexOf","splice","freezeStorageTypeid","freezeStoargeIds","freezeStorageTypeDescription","setRows","tabledata","setOpen","handleChange","Post","status","FreezeStorageTypeId","Select","index","MenuItem","FreezeStorageTypeDescription","freezeStorageTypeId","newvalue","AssignedUser","totalpallets","TotalPallets","PalletsCountPending","IsPickLocationCounted","picklocationcount","CycleCountAssignment","locationCode","rows","countPending","setCountPending","setOption","d","UTC","getFullYear","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","startyear","getUTCFullYear","weekNo","Math","ceil","year","DueInWeekNumber","freezestoragetypeId","setFreezestorageTypeId","setfreeze","handleRadioButton","name","handleGo","updatefreeze","exportbtn","parseInt","FormControl","RadioGroup","FormControlLabel","control","Radio","CycleCount","setLocationCode","setLocationId","setAssignedUsersList","setFreezeStoargeIdsIds","setCountStatus","useContext","UserContext","url","LocationCode","LocationId","url1","allowedRoles","localStorage","getItem","allowedRolesArr","split","res1","Header","IsSuccess","Body","UserList","forEach","res3","Spinner","Box","Tabs","selectionFollowsFocus","Tab","Divider","orientation","flexItem"],"mappings":"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","file":"static/js/11.5d081c9a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { GetExcel } from \"./../../Utilities/AxiosHandler\";\nimport Notification from \"./../Notification\";\n\nconst ExportButton = (props) => {\n  const [snakbar, setSnakbar] = useState({ open: false });\n\n  if (!props.reportId)\n    throw new Error(\"Import Button requires reportType prop\");\n\n  const [exporturl, setExportURL] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const theme = useTheme();\n\n  const handleSubmit = async (event) => {\n    setLoading(true);\n    try {\n      const response = await GetExcel(exporturl)\n      if(response.data){\n      let date = new Date();\n          var a = document.createElement(\"a\");\n          a.href =\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" +\n            response.data;\n          \n          a.download = `${props.reportId}_${date.toLocaleString()}.xlsx`;\n          a.click();\n\n          const snak = {\n            open: true,\n            message: \"File Downloaded Successfully\",\n            severity: \"success\",\n            time : 1500\n          };\n          setSnakbar(snak);\n\n      }\n    } catch (error) {\n      console.log({...error});\n      const snak = {\n        open: true,\n        message: error.response.data.message,\n        severity: \"error\",\n        time : null\n      };\n      setSnakbar(snak);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    const data = props.data;\n    const keys = Object.keys(data);\n    const values = Object.values(data);\n    const prssvl = process.env.REACT_APP_PRSSVL;\n    let exporturl = `${prssvl}/ExportImport/export?reportId=${props.reportId}`;\n\n    for (let i = 0; i < keys.length; i++) {\n      exporturl = exporturl + \"&\";\n      exporturl = exporturl + keys[i] + \"=\" + values[i];\n    }\n    console.log(exporturl);\n    setExportURL(exporturl);\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      {snakbar.open && (\n        <Notification\n          open={snakbar.open}\n          close={setSnakbar}\n          time={snakbar.time}\n          message={snakbar.message}\n          severity={snakbar.severity}\n        />\n      )}\n      \n    <Button\n      fullWidth\n      variant=\"contained\"\n      onClick={handleSubmit}\n      component=\"span\"\n    >\n      {!loading && \"Export\"}\n      {loading && \"Downloading...\"}\n      {loading && (\n        <CircularProgress\n          size={24}\n          sx={{\n            color: `${theme.palette.secondary.main}`,\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            marginTop: \"-12px\",\n            marginLeft: \"-12px\",\n          }}\n        />\n      )}\n    </Button>\n    </React.Fragment>\n  );\n};\n\nexport default ExportButton;\n","import * as React from 'react';\nimport { Get, Post } from './../Utilities/AxiosHandler';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport TablePagination from '@mui/material/TablePagination';\nimport Table from '@mui/material/Table';\nimport TableHead from '@mui/material/TableHead';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { UserContext } from \"./../../App.js\";\nimport { useContext } from 'react';\nimport Switch from '@mui/material/Switch';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport TableRow from '@mui/material/TableRow';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport IconButton from '@mui/material/IconButton';\nimport {webSocketHandler,entryAdded,entryCancelled,entryDeleted,entryUpdated} from 'ws-handler';\nimport { withStyles } from '@mui/styles';\nimport { MenuItem } from '@mui/material';\nfunction Replay({id,FacilityCode,userFacility}){\n  const [facilityCodenotmatches,setFacilityCodenotMatches] = React.useState(false);\n  const handleClick=()=>{\n    console.log(id.id);\n  }\n  useEffect(()=>{\n    if(FacilityCode != userFacility)\n    setFacilityCodenotMatches(true);\n  })\n  return(\n    <>\n    <IconButton disabled={facilityCodenotmatches}>\n      <ReplayIcon onClick={handleClick} /></IconButton></>\n\n  )\n}\nfunction Freeze({freeze,ID,FacilityCode,userFacility}){\n  const [checked,setchecked] = React.useState(freeze);\n  const [updated,setupdated] = React.useState(false);\n  const [facilityCodenotmatches,setFacilityCodenotMatches] = React.useState(false);\n  const handleChange=(event)=>{\n    const data={\n      ID:ID,checked:event.target.checked\n    }\n    setchecked(event.target.checked);\n    console.log(data);\n    entryUpdated({\"eventData\" : data});\n  }\n  useEffect(()=>{\n    if(FacilityCode != userFacility)\n    setFacilityCodenotMatches(true);\n  },[])\n  return(\n    <>\n    <Switch checked={checked} onChange={handleChange} disabled={facilityCodenotmatches}/></>\n  )\n}\nfunction AssignedUsers({assignedUsersList,ItemKey,locationId,inventorycyclecountsequenceId,assignedUser,FacilityCode,InventoryIdentifier,countstatus,userFacility}){\n  const [value,setValue] = React.useState();\n  const [inputValue, setInputValue] = React.useState(''); \n  const [assignedusername,setAssigneduserName] = React.useState('');\n  const [usersList,setUsersList] = React.useState(assignedUsersList);\n  let [removedUserList,setRemovedUserList] = React.useState(assignedUsersList);\n  const [facilityCodenotmatches,setFacilityCodenotMatches] = React.useState(false);\n  useEffect(async()=>{\n    if(assignedUser != null && assignedUsersList.length > 0){\n      setValue(assignedUser);\n    }\n    if(FacilityCode!=userFacility)\n    setFacilityCodenotMatches(true);\n    if(countstatus == 3 || countstatus == 4){\n      let res = await Get(\"/cycleCountMaintenance/getListOfAssignedUsersForAnItem?ItemKey=\"+ItemKey+'&InventoryIdentifier='+InventoryIdentifier+'&SequenceId='+inventorycyclecountsequenceId+'&FacilityCode='+FacilityCode)\n      console.log(res);\n      if(res.data){\n        for(let i = 0;i < res.data.length;i++){\n          if(res.data[i].CountStatusId != countstatus){\n            var obj = usersList.find(o=>o.key === res.data[i].CountedBy);\n              removedUserList = removedUserList.filter(item=>item.key != obj.key)\n              handlesetRemovedUserList(removedUserList)\n            }\n          }\n        }\n    }\n  },[assignedUser])\n  const handlesetRemovedUserList=(removedUserList)=>{\nsetRemovedUserList(removedUserList);\n  }\n  const handleAssignedUsers=async(newValue)=>{\n    setAssigneduserName(newValue);\n    setValue(newValue);\n  }\n  return(\n    <Autocomplete\n      disablePortal\n      disabled={facilityCodenotmatches}\n      value={value}\n      onChange={(event, newValue) => {\n        handleAssignedUsers(newValue);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      options={removedUserList}\n      getOptionLabel={option => option.value}\n      sx={{ width: \"auto\", marginLeft:0, marginRight:2 }}\n      renderInput={(params) => <TextField {...params} variant='outlined' size='small' />}\n    />\n  )\n}\nfunction UpdatedFreeze({freeze,ID}){\n  const [checked,setchecked] = React.useState(freeze);\n  const [updated,setupdated] = React.useState(false);\n  const handleChange=(event)=>{\n    setchecked(event.target.checked);\n  }\n  return(\n    <>\n    <Switch checked={checked} onChange={handleChange}/></>\n  )\n}\nexport default function CycleCountMaintenance({countStatus,assignedUsersList,locationId,row,setRow,facilityCode}){\n  const AppName = \"CycleCountMaintenance\"\nconst [idArray,setIdArry] = React.useState([1])\nconst [hide,sethide] = React.useState(true);\nconst [handlePullDown,setHandlePullDown] = React.useState(false);\nconst [handleFreeze,setHandleFreeze] = React.useState(false);\nconst [assignedUser,setAssignedUser] = React.useState(null);\nconst [countStatusValue,setCountStatusValue] = React.useState(null);\nconst [items,setItems] = React.useState([]);\nconst [inputValue,setInputValue] = React.useState('');\nconst [itemValue,setItemValue]=React.useState();\nconst URL = 'wss://btxwajfvk6.execute-api.us-east-1.amazonaws.com/dev';\nfunction socketHandler(event){\n\tif(event.type == \"open\"){\n\t\t//setIsConnected(true);\n    console.log('Connected');\n\t}\n\telse if(event.type == \"close\"){\n\t//setIsConnected(false);\n  console.log('Disconnected');\n\t}\n\telse if(event.type == \"message\"){\n\t\tconsole.log(event.data);\n    sethide(false);\n    //handleChange(event);\n\t}\n\telse if(event.type == \"error\"){\n\t\tconsole.log(\"Error Occured\");\n\t}\n}\nuseEffect(async () => {\n  console.log('In useEffect');\n\tconst connectionObject = {\"URL\" : URL, \"AppName\" : AppName, \"idArray\" : idArray}\n\twebSocketHandler(connectionObject,{socketHandler});\n},[idArray])\n  //const [row,setRow] = React.useState([]);\n  const [showTable,setShowTable] = React.useState(false);\n  function getDescription(id){\n    for(let i = 0;i < countStatus.length;i++){\n      if(id == countStatus[i].CycleCountStatusId)\n      return countStatus[i].CycleCountStatusDescription;\n    }\n    return \"Invalid Id\";\n  }\n  const handleApply=async()=>{\n    console.log(countStatusValue);\n    let countstatus = countStatusValue?countStatusValue.CycleCountStatusId:'';\n    let result;\n    let pulldown=handlePullDown?1:0;\n    console.log('In apply handleFreeze',handleFreeze);\n    let freeze=handleFreeze?1:0;\n    let item=itemValue?itemValue:'';\n    if(assignedUser != null){\n    result=await Get(\"/cycleCountMaintenance/getCycleCountMaintenanceTable?ItemKey=\"+item+'&AssignedTo='+assignedUser.key+'&PullDownInitiated='+pulldown+'&CountStatus='+countstatus+'&Freeze='+freeze+'&locationId='+locationId);\n    }\n    else{\n      result=await Get(\"/cycleCountMaintenance/getCycleCountMaintenanceTable?ItemKey=\"+item+'&AssignedTo='+''+'&PullDownInitiated='+pulldown+'&CountStatus='+countstatus+'&Freeze='+freeze+'&locationId='+locationId);\n    }\n    setRow(result.data);\n  }\n  const StyledTableRow = withStyles((theme)=>({\n    root:{\n      '&:nth-of-type(odd)':{\n        backgroundColor:\"white\",\n      },\n      '&:nth-of-type(even)':{\n        backgroundColor:'#eee',\n      },\n    }\n  }))(TableRow);\n  const StyledTableCell=withStyles((theme)=>({\n    root:{\n      padding: \"0px 16px\",\n      //whiteSpace: 'wrap',\n      //textOverflow:'ellipsis',\n      //maxWidth:'1px'\n    }\n  }))(TableCell);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [checked,setchecked] = React.useState(false);\n  \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handlecheck = (event)=>{\n    setchecked(event.target.checked);\n  }\n  const handleChangePullDown=(event)=>{\n    setHandlePullDown(event.target.checked);\n    console.log(event.target.checked);\n  }\n  const handleChangeFreeze=(event)=>{\n    setHandleFreeze(event.target.checked);\n    console.log(event.target.checked);\n  }\n  const columns = [\n    { id: 'item', label: 'Item' },\n    { id: 'pallet', label: 'Pallet/ PicLocation'},\n    {\n      id: 'currentlocation',\n      label:'Current Location',\n    },\n    {\n      id: 'assignedlocation',\n      label: 'Assigned Location',\n    },\n    {\n      id:'totalquantity',\n      label:'Pallet Quantity',\n    },\n    {\n      id: 'assignto',\n      label: 'Assign To',\n    },\n    {\n      id: 'pulldown',\n      label: 'PullDown',\n    },\n    {\n      id:'status',\n      label:'Status',\n    },\n    {\n      id:'freeze',\n      label:'Freeze',\n    },\n    {\n      id:'sel',\n      label:'Sel',\n    }\n  ];\n  return(\n    <>\n    <div style={{display:'flex',flexDirection:'row'}}>\n      <div style={{width:'70%',border:'black'}}>\n      <Grid container spacing={0} sx={{paddingLeft:{sm:3,xs:1},paddingRight:{sm:3,xs:1}}}>\n        <Grid item xs={12} sm={4} sx={{display:'flex'}}>\n    <Autocomplete style={{marginLeft:'30px'}}\n    disablePortal\n    id=\"itemSelect\"\n    options={items}\n    inputValue={inputValue}\n    onInputChange={async(event,newInputValue)=>{\n      setInputValue(newInputValue);\n      if(newInputValue.length){\n      let res = await Get(\"/cycleCountMaintenance/getItems?term=\"+newInputValue);\n      console.log(res.data);\n      if(res.data){\n        while(items.length){\n          items.pop();\n        }\n      for(let i = 0;i < res.data.length;i++){\n        items.push(res.data[i].ItemKey);\n      }\n      setItems(items)\n      console.log(items);\n    }\n  }\n    }}\n    onChange={(event,value)=>{\n      setItemValue(value)\n    }}\n    sx={{ width: 200,paddingTop:2 ,height:50}}\n    size=\"small\"\n    renderInput={(params) => <TextField {...params}  label=\"Select Item\"  variant=\"standard\"/>}\n    />\n        </Grid>\n        <Grid item xs={12} sm={4} sx={{display:'flex'}} >\n    <Autocomplete\n    disablePortal\n    id=\"assignedto\"\n    value={assignedUser}\n    options={assignedUsersList}\n    renderInput={(params) => <TextField {...params}  label=\"Select Assigned To\" variant=\"standard\"/>}\n    getOptionLabel={(option) => option.value?option.value:''}\n    onChange={(_event,newValue)=>{\n      setAssignedUser(newValue);\n    }}\n    sx={{ width: 200,paddingTop:2 }}\n    size=\"small\"\n    \n    />\n    </Grid>\n    <Grid item xs={6} sm={4} sx={{display:'flex'}} style={{marginTop:'24px'}}>\n    <label style={{ fontSize: '16px', fontWeight: 'bold',marginTop:'6px'}}>Pull Down Initiated:</label>\n      <Switch checked={handlePullDown} onChange={handleChangePullDown}/>\n        </Grid>\n        <Grid item style={{marginLeft:'30px'}} sx={{display:'flex'}}>\n    <Autocomplete\n    disablePortal\n    value={countStatusValue}\n    id=\"pulldown\"\n    options={countStatus}\n    getOptionLabel={option=>option.CycleCountStatusDescription}\n    onChange={(_event,newValue)=>{\n      setCountStatusValue(newValue);\n    }}\n    sx={{ width: 200,paddingTop:2 }}\n    size=\"small\"\n    renderInput={(params) => <TextField {...params}  label=\"Select CountStatus\" variant=\"standard\"/>}\n    />\n        </Grid>\n        <Grid item xs={6} md={4} style={{marginLeft:'110px',marginTop:'20px'}} sx={{display:'flex'}}>\n        <label style={{ fontSize: '16px', fontWeight: 'bold',marginTop:'6px'}}>Freeze:</label>\n      <Switch checked={handleFreeze} onChange={handleChangeFreeze}/>\n    </Grid>\n        <Grid item sx={{display:'flex'}}>\n          <Button size='small' variant='contained' color='primary' style={{marginLeft:'100px',height:'40px',marginTop:'20px'}} onClick={handleApply}>Apply</Button>\n        </Grid>\n      </Grid>\n      </div>\n      <div style={{borderLeft:'1px solid black',height:'150px',marginLeft:'0px',marginTop:'0px'}}/>\n      <div style={{width:'30%'}}>\n        <Grid container spacing={0} sx={{paddingLeft:{sm:3,xs:1},paddingRight:{sm:3,xs:1}}}>\n          <Grid sx={{display:'flex'}}>\n            <Autocomplete style={{marginLeft:'30px'}}\n    disablePortal\n    id=\"itemSelect\"\n    options={items}\n    sx={{ width: 200,paddingTop:2 }}\n    size=\"small\"\n    renderInput={(params) => <TextField {...params}  label=\"Select PullDown\" variant=\"standard\"/>}\n    />\n    <Button variant=\"contained\" color='primary' style={{marginLeft:'50px',marginTop:'10px',height:'40px'}}>Go</Button>\n          </Grid>\n        </Grid>\n        <Grid container spacing={0} sx={{paddingLeft:{sm:3,xs:1},paddingRight:{sm:3,xs:1}}}>\n          <Grid item sx={{display:'flex'}}>\n            <Autocomplete style={{marginLeft:'30px'}}\n    disablePortal\n    id=\"countstatus\"\n    options={assignedUsersList}\n    getOptionLabel={option => option.value}\n    sx={{ width: 200,paddingTop:2}}\n    size=\"small\"\n    renderInput={(params) => <TextField {...params}  label=\"Select Reassign\" variant=\"standard\"\n    />}\n\n    />\n    <Button variant=\"contained\" color='success' style={{marginLeft:'50px',marginTop:'10px',height:'40px'}}>Reset</Button>\n          </Grid>\n            </Grid>\n      </div>\n      </div>\n      <div>\n      <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n  <TableContainer sx={{ maxHeight: 440 }}>\n    <Table stickyHeader aria-label=\"sticky table\">\n      <colgroup>\n      <col width='5%'/>\n      <col width='5%'/>\n      <col width='10%'/>\n      <col width='11%'/>\n      <col width='10%'/>\n      <col width='10%'/>\n      <col width='5%'/>\n      <col width='10%'/>\n      <col width='5%'/>\n      <col width='5%'/>\n      </colgroup>\n      <TableHead>\n        <StyledTableRow>\n          {columns.map((column) => (\n            <StyledTableCell style={{fontWeight:'bold'}}\n              key={column.id}\n            >\n              {column.label}\n              {column.label=='Sel'?<input type='checkbox' style={{width:'20px',height:'20px'}} checked={checked} onChange={handlecheck}/>:null}\n            </StyledTableCell>\n          ))}\n        </StyledTableRow>\n      </TableHead>\n      <TableBody>\n      {row.map(data=>(\n          <StyledTableRow hidden={false}>\n            <StyledTableCell><Typography component='span' variant=\"body1\">{data.ItemKey}</Typography></StyledTableCell>\n            <StyledTableCell><Typography component='span' variant=\"body1\">{data.InventoryIdentifier}</Typography></StyledTableCell>\n            <StyledTableCell><Typography component='span' variant=\"body1\">{data.CurrentLocation}</Typography></StyledTableCell>\n            <StyledTableCell><Typography component='span' variant=\"body1\">{data.AssignedLocation}</Typography></StyledTableCell>\n            <StyledTableCell><Typography component ='span' variant='body1'>{'('+(data.FullLayers * data.CaseTrayPerLayer + data.ExtraCaseTrays)+' * '+data.QuantityPerCaseOrTray+' + '+data.ExtraQuantity+')'+' = '+data.TotalQuantity}</Typography></StyledTableCell>\n            <StyledTableCell><AssignedUsers assignedUsersList={assignedUsersList} ItemKey={data.ItemKey} locationId={locationId} inventorycyclecountsequenceId={data.InventoryCycleCountSequenceId}  assignedUser={data.CountedBy} FacilityCode={data.FacilityCode} InventoryIdentifier={data.InventoryIdentifier} countstatus={data.CountStatusId} userFacility={facilityCode}/></StyledTableCell>\n            <StyledTableCell><Typography component='span' variant=\"body1\">{data.IsPullDownCreated?\"Yes\":\"No\"}</Typography></StyledTableCell>\n            <StyledTableCell><Typography component='span' variant=\"body1\"><Grid container spacing={0}><Grid item xs style={{marginTop:'10px'}}>{getDescription(data.CountStatusId)}</Grid>\n            <Grid item xs style={{marginLeft:'0px'}}><Replay id={data.InventoryCycleCountId} FacilityCode={data.FacilityCode} userFacility={facilityCode}/></Grid>\n            </Grid></Typography></StyledTableCell>\n            <StyledTableCell><Typography component='span' variant=\"body1\" style={{marginRight:'30px'}}>\n              <Freeze freeze={data.FreezeInventoryType?true:false} ID={data.Id} FacilityCode={data.FacilityCode} userFacility={facilityCode}/></Typography></StyledTableCell>\n            <StyledTableCell><Typography component='span' variant=\"body1\"><input type='checkbox' style={{width:'20px',height:'20px',marginLeft:'25px'}} checked={checked&&(data.FacilityCode==facilityCode)?checked:null} disabled={data.FacilityCode != facilityCode ? true:false}/></Typography></StyledTableCell>\n          </StyledTableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n</Paper>\n</div>\n</>\n  )\n}","import React, { useEffect,useState } from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Stack from \"@mui/material/Stack\";\nimport Notification from \"./../Notification\";\nimport { PostExcel } from \"./../../Utilities/AxiosHandler\";\n\nconst Input = styled(\"input\")({\n  fontSize: \"18px\",\n  display: \"inline-block\",\n  cursor: \"pointer\",\n});\n\nconst ImportButton = (props) => {\n  if (!props.reportId)\n    throw new Error(\"Import Button requires reportType prop\");\n\n  const [loading, setLoading] = useState(false);\n  const [snakbar, setSnakbar] = useState({ open: false });\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [importurl, setImportURL] = useState(\"\");\n  const theme = useTheme();\n\n  const handleSubmit = async (event) => {\n    if (!selectedFile) {\n      const snak = {\n        open: true,\n        message: \"Please Select a file\",\n        severity: \"warning\",\n      };\n      setSnakbar(snak);\n      return;\n    }\n    \n    setLoading(true);\n\n    var reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n    reader.onload = async () => {\n      let data = reader.result;\n      const response = await PostExcel(importurl, data);\n      if (response.data) {\n          let date = new Date();\n          var a = document.createElement(\"a\");\n          a.href =\n            \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" +\n            response.data;\n          a.download = `${props.reportId}_${date.toLocaleString()}.xlsx`;\n          a.click();\n          setLoading(false);\n      }\n    };\n    reader.onerror = function (error) {\n      console.log(\"Error: \", error);\n      setLoading(false);\n    };\n    \n  };\n\n  const handleFileSelect = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  useEffect(() => {\n    const data = props.data;\n    const keys = Object.keys(data);\n    const values = Object.values(data);\n    const prssvl = process.env.REACT_APP_PRSSVL;\n    let importurl = `${prssvl}/ExportImport/import?reportId=${props.reportId}`;\n\n    for (let i = 0; i < keys.length; i++) {\n      importurl = importurl + \"&\";\n      importurl = importurl + keys[i] + \"=\" + values[i];\n    }\n    console.log(importurl);\n    setImportURL(importurl);\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      {snakbar.open && (\n        <Notification\n          open={snakbar.open}\n          close={setSnakbar}\n          time={2000}\n          message={snakbar.message}\n          severity={snakbar.severity}\n        />\n      )}\n      <Stack direction=\"row\" spacing={0}>\n        <label htmlFor=\"contained-button-file\">\n          <Input\n            sx={{ width: { xs: \"12rem\", sm: \"20rem\" } }}\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n            id=\"contained-button-file\"\n            onChange={handleFileSelect}\n            type=\"file\"\n          />\n        </label>\n        <Button variant=\"contained\" onClick={handleSubmit}>\n        {!loading && \"Import\"}\n        {loading && \"Importing...\"}\n        {loading && (\n          <CircularProgress\n            size={24}\n            sx={{\n              color: `${theme.palette.secondary.main}`,\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: \"-12px\",\n              marginLeft: \"-12px\",\n            }}\n          />\n        )}\n        </Button>\n      </Stack>\n    </React.Fragment>\n  );\n};\n\nexport default ImportButton;\n\n\n\n// axios.post(\"http://localhost:3001/dev/ExportImport/import?reportId=language\",\n      // data,\n      //   {\n      //       responseType: 'blob',\n      //       headers: {\n      //           'Content-Disposition': \"attachment; filename=template.xlsx\",\n      //           'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      //       }\n      //   })\n      //   .then((response) => {\n      //       const url = window.URL.createObjectURL(new Blob([response.data]));\n      //       const link = document.createElement('a');\n      //       link.href = url;\n      //       link.setAttribute('download', 'template.xlsx');\n      //       document.body.appendChild(link);\n      //       link.click();\n      //   })\n      //   .catch((error) => console.log(error));\n","import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Radio from '@mui/material/Radio';\nimport { useContext } from 'react';\nimport { useEffect } from 'react';\nimport Switch from '@mui/material/Switch';\nimport axios from 'axios';\nimport { withStyles } from '@mui/styles';\nimport Select from '@mui/material/Select';\nimport Alert from '@mui/material/Alert';\nimport Typography from '@mui/material/Typography';\nimport TablePagination from '@mui/material/TablePagination';\nimport { prssvlGet } from './../Utilities/AxiosHandler';\nimport { UserContext } from \"./../../App.js\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Table from '@mui/material/Table';\nimport { Get, Post } from './../Utilities/AxiosHandler';\nimport TableHead from '@mui/material/TableHead';\nimport Paper from '@mui/material/Paper';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport TableBody from '@mui/material/TableBody';\nimport ImportButton from '../SharedComponents/FileButtons/ImportBtn';\nimport ExportButton from '../SharedComponents/FileButtons/ExportBtn';\nimport Notification from '../SharedComponents/Notification';\nlet list = [];\n//const [totalpallets,setTotalPallets] = React.useState('');\nfunction Sel({ checked, inventorycyclecountsequenceId }) {\n  if (checked) {\n    list.push(inventorycyclecountsequenceId);\n  }\n  let [updateIds, setupdateIds] = React.useState([]);\n  const handletrue = (event) => {\n    console.log(inventorycyclecountsequenceId, event.target.checked);\n    if (event.target.checked)\n      list.push(inventorycyclecountsequenceId);\n    else {\n      let removed = list.indexOf(inventorycyclecountsequenceId);\n      list.splice(removed, 1);\n      console.log(list)\n    }\n    console.log(list);\n  }\n  return (\n    <>\n      <input type='checkbox' style={{ width: '20px', height: '20px', marginLeft: '25px' }} checked={checked ? checked : null} onChange={handletrue} />\n    </>\n  )\n}\nfunction Freeze({ inventorycyclecountsequenceId, freezeStorageTypeid, freezeStorageTypeDescription, freezeStoargeIds,setRows,tabledata,open,setOpen }) {\n  const [value, setValue] = React.useState(freezeStorageTypeid);\n  const handleChange = async (event) => {\n    setValue(event.target.value);\n    const result = await Post(\"/cycleCountAssignment/updatefreezestorage?id=\" + inventorycyclecountsequenceId + \"&freezestorageid=\" + event.target.value);\n    console.log(result.status);\n    if(result.status === 200){\n      const obj = {open:true,message:\"Record updated successfully!\",severity:\"success\",time:2000}\n      setOpen(obj);\n    for(let i= 0;i < tabledata.length;i++){\n      if(tabledata[i].InventoryCycleCountSequenceId == inventorycyclecountsequenceId){\n        tabledata[i].FreezeStorageTypeId=event.target.value;\n        }\n      }\n      setRows([...tabledata]);\n    }\n    else{\n      const obj = {open:true,message:\"Record not updated!\",severity:\"error\",time:2000}\n      setOpen(obj);\n    }\n  }\n  return (\n    <>\n      <Select style={{ width: '100px', height: '20px' }} value={value}\n        onChange={handleChange} >\n        {freezeStoargeIds.map((item, index) => {\n          return (\n            <MenuItem key={item.FreezeStorageTypeId} value={item.FreezeStorageTypeId}>\n              {item.FreezeStorageTypeDescription}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </>\n  )\n}\nfunction AssignedUsers({assignedUsersList,ItemKey,locationId,inventorycyclecountsequenceId,freezeStorageTypeId,assignedUser,setRows,tabledata,open,setOpen}){\n  const [value,setValue] = React.useState();\n  const [inputValue, setInputValue] = React.useState(''); \n  const [assignedusername,setAssigneduserName] = React.useState('');\n  const handleAssignedUsers=async(newvalue)=>{\n    setAssigneduserName(newvalue);\n    setValue(newvalue);\n    const result = await Get(\"/cycleCountAssignment/updateAssignedUser?itemKey=\"+ItemKey+\"&locationId=\"+locationId+\"&inventorycyclecountsequenceId=\"+inventorycyclecountsequenceId+\"&assignedUser=\"+newvalue+\"&freezeStorageTypeId=\"+freezeStorageTypeId)\n    if(result.status ===200){\n      if(result.data == 'No Pallet and PickLocation Details exist'){\n        const obj = {open:true,message:\"No Pallet or PickLocation Details Exist!\",severity:\"success\",time:2000}\n        setOpen(obj);\n      }\n      else{\n    for(let i= 0;i < tabledata.length;i++){\n      if(tabledata[i].InventoryCycleCountSequenceId == inventorycyclecountsequenceId){\n        tabledata[i].AssignedUser=newvalue;\n        if(result.data.totalpallets){\n        tabledata[i].TotalPallets=result.data.totalpallets;\n        tabledata[i].PalletsCountPending=tabledata[i].TotalPallets;\n        tabledata[i].IsPickLocationCounted=(result.data.picklocationcount==0)?null:0;\n        }\n      }\n    }\n    setRows([...tabledata]);\n    const obj = {open:true,message:\"Record updated successfully!\",severity:\"success\",time:2000}\n    setOpen(obj);\n  }\n  }\n  else{\n      const obj = {open:true,message:'A pending replenishment for this item: '+ItemKey +' exists.Please complete it',severity:\"error\",time:5000}\n    setOpen(obj);\n    setValue('');\n    }\n}\n  useEffect(async()=>{\n    if(assignedUser != null && assignedUsersList.length>0){\n      // console.log(assignedUsersList.find(o=>o.key===assignedUser));\n  setValue(assignedUser)\n    }\n  },[assignedUser])\n  return(\n    <Autocomplete\n      disablePortal\n      value={value}\n      onChange={(event, newValue) => {\n        handleAssignedUsers(newValue.key);\n      }}\n      inputValue={inputValue}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      options={assignedUsersList}\n      getOptionLabel={option => option.value}\n      sx={{ width: \"auto\", marginLeft:0, marginRight:2 }}\n      renderInput={(params) => <TextField {...params} variant='outlined' size='small' />}\n    />\n  )\n}\nexport default function CycleCountAssignment({assignedUsersList,locationId,locationCode,freezeStoargeIds,rows,setRows}) {\n  let items = []\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: \"white\",\n      },\n      '&:nth-of-type(even)': {\n        backgroundColor: '#eee',\n      },\n    }\n  }))(TableRow);\n  const StyledTableCell = withStyles((theme) => ({\n    root: {\n      padding: \"0px 16px\",\n    },\n  }))(TableCell);\n  const [checked, setchecked] = React.useState(false);\n  const [showTable, setShowTable] = React.useState(true);\n  const [value, setValue] = React.useState(1);\n  const [countPending, setCountPending] = React.useState(true);\n  const options = ['-1', '0', '1', '2', '3', '4', '5', 'more than 5'];\n  const [option, setOption] = React.useState('');\n  const [inputValue, setInputValue] = React.useState('');\n  const [open,setOpen] = React.useState(false);\n  //const [rows, setRows] = React.useState([]);\n  const handleCountPendingSwitch = (event) => {\n    setCountPending(event.target.checked);\n  }\n  const handlecheck = (event) => {\n    setchecked(event.target.checked);\n  }\n  const columns = [\n    { id: 'item', label: 'Item' },\n    { id: 'countdue', label: 'Count Due(In weeks)' },\n    {\n      id: 'totalpallets',\n      label: 'Total Pallets',\n    },\n    {\n      id: 'countpending',\n      label: 'Count Pending',\n    },\n    {\n      id: 'picloccounted',\n      label: 'Pic Loc Counted',\n    },\n    {\n      id: 'freeze',\n      label: 'Freeze',\n    },\n    {\n      id: 'assignto',\n      label: 'Assign To',\n    },\n    {\n      id: 'sel',\n      label: 'Sel',\n    }\n  ];\n  var d= new Date();\n    d=new Date(Date.UTC(d.getFullYear(),d.getMonth(),d.getDate()));\n    d.setUTCDate(d.getUTCDate()+4-(d.getUTCDay()||7));\n    var startyear=new Date(Date.UTC(d.getUTCFullYear(),0,1));\n    var weekNo=Math.ceil((((d-startyear)/86400000)+1)/7);\n  const handleApply = async () => {\n    var d= new Date();\n    var year = d.getFullYear();\n    let tabledata;\n    setRows([]);\n    while (rows.length > 0)\n      rows.pop();\n    tabledata = await Get(\"/cycleCountAssignment/getcountsequencedata?dueIn=\" + (option == 'more than 5' ? 6 : option) + \"&countPending=\" + countPending+\"&locationId=\"+locationId+\"&yearNumber=\"+year);\n    tabledata=tabledata.data;\n    let itemkeys=[]\n    for(let i = 0;i < tabledata.length;i++){\n      tabledata[i].DueInWeekNumber=tabledata[i].DueInWeekNumber<weekNo?-1:tabledata[i].DueInWeekNumber-weekNo;\n    }\n    setRows(tabledata);\n    //setData(tabledata);\n    //setShowTable(false);\n  }\n  const [freezestoragetypeId, setFreezestorageTypeId] = React.useState('');\n  const [freeze, setfreeze] = React.useState('');\n  const handleRadioButton = async (event) => {\n    setfreeze(event.target.value);\n    setFreezestorageTypeId(event.target.name);\n  }\n  const handleGo = async () => {\n    const updatefreeze = [];\n    for (let i = 0; i < list.length; i++) {\n      var obj = {};\n      obj['id'] = list[i];\n      obj['freezestorageid'] = freezestoragetypeId;\n      updatefreeze.push(obj);\n    }\n    const res = await Post(\"/cycleCountAssignment/updateMultipleFreezeStorage\", updatefreeze);\n    console.log(res);\n    const obj1 = {open:true,message:\"Records updated successfully!\",severity:\"success\",time:2000}\n      setOpen(obj1);\n  }\n  const exportbtn = {\n    'dueInWeeks': (option=='more than 5')?52:option?(parseInt(option)+weekNo):52,\n    'LocationCode': locationCode\n  }\n  const filter = {\n    'locationCode': locationCode,\n    'locationId': locationId\n  }\n  return (\n    <>\n    <Notification open={open.open} close={setOpen} message={open.message} severity={open.severity} time={open.time} />\n      <Grid container spacing={2}>\n        <Grid item xs={4}>\n          <ImportButton reportId='AssignItemCC' data={filter} />\n        </Grid>\n        <Grid item xs={0.5}>\n          <ExportButton reportId=\"AssignItemCC\" data={exportbtn} />\n        </Grid>\n      </Grid>\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        <div style={{ width: '40%', border: 'black' }}>\n          <Grid container spacing={0} sx={{ paddingLeft: { sm: 3, xs: 1 }, paddingRight: { sm: 3, xs: 1 } }}>\n            <Grid item xs={12} sm={4} sx={{ display: 'flex' }}>\n              <Autocomplete\n                disablePortal\n                value={option}\n                onChange={(event, newValue) => {\n                  setOption(newValue);\n                }}\n                options={options}\n                sx={{ width: 300 }}\n                renderInput={(params) => <TextField {...params} label=\"Due In(weeks)\" variant='standard' />}\n              />\n            </Grid>\n            <Grid item sx={{ display: 'flex' }} style={{ marginLeft: '50px' }}>\n              <label style={{ fontSize: '16px', fontWeight: 'bold', marginTop: '25px' }}>Count Pending:</label>\n              <div style={{ marginTop: '20px', marginLeft: '20px' }}>\n                <Switch checked={countPending} onChange={handleCountPendingSwitch}/>\n              </div>\n            </Grid>\n            <Grid item sx={{ display: 'flex' }}>\n              <Button size='small' variant='contained' color='primary' style={{ marginLeft: '50px', width: '30px', height: '40px', marginTop: '20px' }} onClick={handleApply}>Apply</Button>\n            </Grid>\n          </Grid>\n        </div>\n        <div style={{ borderLeft: '1px solid black', height: '80px', marginLeft: '0px', marginTop: '0px' }} />\n        <div style={{ width: '60%' }}>\n          <Grid container spacing={0} sx={{ paddingLeft: { sm: 3, xs: 1 }, paddingRight: { sm: 3, xs: 1 } }}>\n            <Grid sx={{ display: 'flex' }}>\n              <FormControl component=\"fieldset\">\n                <RadioGroup row aria-label=\"options\" name=\"row-radio-buttons-group\" style={{ marginTop: '15px' }} value={freeze} onChange={handleRadioButton}>\n                  <label style={{ fontSize: '16px', fontWeight: 'bold', marginTop: '7px' }}>Freeze: &nbsp;&nbsp;</label>\n                  <FormControlLabel name=\"1\" value=\"None\" control={<Radio />} label=\"None\" />\n                  <FormControlLabel name=\"2\" value=\"Pick Only\" control={<Radio />} label=\"Pick Only\" />\n                  <FormControlLabel name=\"3\" value=\"All\" control={<Radio />} label=\"All\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item sx={{ display: 'flex' }} style={{ marginLeft: '50px', marginTop: '-15px' }}>\n              <Autocomplete\n                disablePortal\n                sx={{ width: 200, paddingTop: 2 }}\n                size=\"small\"\n                options={assignedUsersList}\n                getOptionLabel={option => option.value}\n                renderInput={(params) => <TextField {...params} label=\"Select Assign To\" variant='standard' />}\n              />\n            </Grid>\n            <Grid item sx={{ display: 'flex' }}>\n              <Button size='small' variant='contained' color='success' style={{ marginLeft: '50px', width: '30px', height: '40px', marginTop: '10px' }} onClick={handleGo}>Go</Button>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n      <div>\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <StyledTableRow>\n                  {columns.map((column) => (\n                    <StyledTableCell style={{ fontWeight: 'bold' }}\n                      key={column.id}\n                    >\n                      {column.label}\n                      {column.label == 'Sel' ? <input type='checkbox' style={{ width: '20px', height: '20px' }} checked={checked} onChange={handlecheck} /> : null}\n                    </StyledTableCell>\n                  ))}\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(data => (\n                  <StyledTableRow>\n                    <StyledTableCell><Typography component='span' variant=\"body1\">{data.ItemKey}</Typography></StyledTableCell>\n                    <StyledTableCell><Typography component='span' variant=\"body1\">{data.DueInWeekNumber}</Typography></StyledTableCell>\n                    <StyledTableCell><Typography component='span' variant=\"body1\">{(data.AssignedUser)?(data.TotalPallets):null}</Typography></StyledTableCell>\n                    <StyledTableCell><Typography component='span' variant=\"body1\">{(data.AssignedUser)?(data.PalletsCountPending):null}</Typography></StyledTableCell>\n                    <StyledTableCell><Typography component='span' variant='body1'>{(data.AssignedUser)?(data.IsPickLocationCounted==null?'N/A':(data.IsPickLocationCounted?'Yes':'No')):null}</Typography></StyledTableCell>\n                    <StyledTableCell><Freeze inventorycyclecountsequenceId={data.InventoryCycleCountSequenceId} freezeStorageTypeid={data.FreezeStorageTypeId} freezeStorageTypeDescription={data.FreezeStorageTypeDescription} freezeStoargeIds={freezeStoargeIds} setRows={setRows} tabledata={rows} open={open} setOpen={setOpen}/></StyledTableCell>\n                    <StyledTableCell><AssignedUsers assignedUsersList={assignedUsersList} ItemKey={data.ItemKey} locationId={locationId} inventorycyclecountsequenceId={data.InventoryCycleCountSequenceId} freezeStorageTypeId={data.FreezeStorageTypeId} assignedUser={data.AssignedUser} setRows={setRows} tabledata={rows} open={open} setOpen={setOpen}/></StyledTableCell>\n                    <StyledTableCell><Sel checked={checked} inventorycyclecountsequenceId={data.InventoryCycleCountSequenceId} /></StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n        </Paper>\n      </div>\n    </>\n  )\n}","import * as React from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport {useContext} from 'react';\nimport { UserContext } from \"./../../App.js\";\nimport {Get,Post} from '../Utilities/AxiosHandler.js';\nimport { useEffect } from 'react';\nimport { HashRouter, Routes, Route } from \"react-router-dom\";\nimport Spinner from './../../components/SharedComponents/Loaders/Spinner';\nimport CycleCountMaintenance from './CycleCountMaintenance';\nimport CycleCountAssignment from './CycleCountAssignment';\nexport default function CycleCount() {\n  const [value, setValue] = React.useState(0);\n  const [locationCode,setLocationCode] = React.useState('');\n  const [locationId,setLocationId] = React.useState('');\n  const [assignedUsersList,setAssignedUsersList] = React.useState([]);\n  const [freezeStoargeIds, setFreezeStoargeIdsIds] = React.useState([]);\n  const [countStatus,setCountStatus] = React.useState([]);\n  const [loading,setLoading] = React.useState(true);\n  const [rows,setRows] = React.useState([]);\n  const [row,setRow] = React.useState([]);\n  let optionsforfreeze = [];\n  let user = useContext(UserContext);\n  let facilityCode = user.FacilityCode;\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  useEffect(async () => {\n    let result = await Get(\"/cycleCountAssignment/getfreezestoragetype\");\n    if(result){\n    setFreezeStoargeIdsIds(result.data);\n  }\n    let url = '/common/getLocationCodeandLocationId?facilityCode=' + facilityCode;\n    let res = await Get(url, 'prssvl');\n   if(res.data && res.data[0]){\n      setLocationCode(res.data[0].LocationCode);\n      setLocationId(res.data[0].LocationId);\n    let url1 = \"/common/getAssignedUsersList?locationCode=\" + res.data[0].LocationCode;\n    //let allowedRoles='PRCC - Administrator,PRCC - Supervisor,PRCC - Standard User'\n    let allowedRoles = localStorage.getItem('AllowedUserRoles');\n    let allowedRolesArr = allowedRoles.split(\",\");\n    for (let i = 0; i < allowedRolesArr.length; i++) {\n      url1 += \"&userRoles=\" + allowedRolesArr[i];\n    }\n  let res1 = await Get(url1, 'prssvl');\n    //let res1 = {\"Header\":{\"IsSuccess\":true,\"Code\":0},\"Body\":{\"UserList\":{\"cvacca\":\"Chris Vacca\",\"hlindgren\":\"Hans Lindgren\",\"kcimo\":\"Kristen Cimo Straub\",\"pk\":\"Krishna Padmanabhan\",\"apacheco\":\"Alberta Pacheco\",\"001514\":\"Chayanne Colon\",\"001581\":\"Maximo Villasagua\",\"001747\":\"Yaritza Crespo \",\"kbramer\":\"Kenneth Bramer\",\"001954\":\"Julio Arroyo\",\"bmcfarland\":\"Brad McFarland\",\"001961\":\"Steve Weston\",\"001970\":\"Patrick Collins\",\"jruotolo\":\"Joanna Ruotolo\",\"dkhurshid\":\"Danish Khursid\",\"002040\":\"JR Albarran\",\"002070\":\"Sabrina Gidley\",\"prsindtest\":\"Test Account\",\"manjulas\":\"Manjula  Subramanya\",\"smandal\":\"Subroto Mandal\"}}}\n   //console.log(res1);\n   if(res1.data) {\n    if(res1.data.Header.IsSuccess){\n      if(res1.data.Body){\n      res1 = res1.data.Body.UserList;\n    //res1=res1.Body.UserList;\n    const keys = Object.keys(res1);\n    console.log(keys);\n    keys.forEach((key, index) => {\n      var obj = {};\n      obj['key'] = key;\n      obj['value'] = res1[key];\n      assignedUsersList.push(obj);\n    });\n    setAssignedUsersList(assignedUsersList);\n  }\n}\n   }\n  }\n    let res3 = await Get(\"/cycleCountMaintenance/getCycleCountStatus\");\n    if(res3.data){\n      setCountStatus(res3.data);\n    }\n    if(res3.status===200 && result.status===200 && res.status===200)\n    setLoading(false);\n  },[])\n  if(loading) return(<Spinner/>);\n\n  return (\n    <>\n    <Box sx={{ width: '100%' }} >\n      <Tabs\n        onChange={handleChange}\n        value={value}\n        aria-label=\"Tabs where selection follows focus\"\n        selectionFollowsFocus\n      >\n        <Tab label=\"Cycle Count Assignment\" style={{fontWeight: 'bolder'}} value={0} />\n        <Divider orientation='vertical' variant='middle' flexItem style={{fontWeight: 'bold'}}/>\n        <Tab label=\"Cycle Count Maintenance\" value={1}/>\n      </Tabs>\n    </Box>\n    {value==0?<CycleCountAssignment assignedUsersList={assignedUsersList} locationId={locationId} locationCode={locationCode} freezeStoargeIds={freezeStoargeIds} rows={rows} setRows={setRows}/>\n      : <CycleCountMaintenance countStatus={countStatus} assignedUsersList={assignedUsersList} locationId={locationId} row={row} setRow={setRow} facilityCode={facilityCode}/>}\n      </>\n  );\n}"],"sourceRoot":""}